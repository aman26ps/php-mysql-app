name: Deploy PHP MySQL App

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      STACK_NAME: php-app-stack
      ECR_REPOSITORY: php-mysql-app
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/cf-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Create EC2 KeyPair from SSM (if not exists)
        run: |
          if ! aws ec2 describe-key-pairs --key-names php-app-key 2>/dev/null; then
            echo "Creating EC2 KeyPair from SSM parameter..."
            PUBLIC_KEY=$(aws ssm get-parameter --name "/phpapp/public-key" --query 'Parameter.Value' --output text)
            aws ec2 import-key-pair \
              --key-name php-app-key \
              --public-key-material "$PUBLIC_KEY"
          else
            echo "KeyPair already exists. Skipping creation."
          fi

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation/ec2-rds-alb.yml \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Build & push Docker image to ECR
        run: |
          REPO_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --query 'repositories[0].repositoryUri' --output text)
          echo "REPO_URI=$REPO_URI" >> $GITHUB_ENV

          echo "Logging in to ECR..."
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI

          echo "Building and pushing image..."
          docker compose -f docker-compose.yml build app
          docker tag php-mysql-app_app:latest $REPO_URI:$IMAGE_TAG
          docker push $REPO_URI:$IMAGE_TAG

      - name: Update EC2 via SSM
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters Name=tag:Name,Values=PHPAppEC2 \
            --query 'Reservations[0].Instances[0].InstanceId' --output text)

          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy latest Docker image" \
            --parameters 'commands=[
              "docker pull $REPO_URI:$IMAGE_TAG",
              "docker stop php_app || true",
              "docker rm php_app || true",
              "docker run -d --name php_app -p 80:80 -e RDS_HOST=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query \"Stacks[0].Outputs[?OutputKey=='RDSHost'].OutputValue\" --output text) $REPO_URI:$IMAGE_TAG"
            ]' \
            --region $AWS_REGION
